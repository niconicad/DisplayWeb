{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", null, _toDisplayString($data.translatedText), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.switchLanguage('en'))\n  }, \"English\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.switchLanguage('zh'))\n  }, \"中文\"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.inputText = $event),\n    placeholder: \"Enter text to translate\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.inputText]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.translateText && $options.translateText(...args))\n  }, \"Translate\")]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","translatedText","onClick","_cache","$event","$options","switchLanguage","inputText","placeholder","args","translateText"],"sources":["D:\\HuaweiMoveData\\Users\\13565650660\\Desktop\\WebSite\\display_web\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <p>{{ translatedText }}</p>\n    <button @click=\"switchLanguage('en')\">English</button>\n    <button @click=\"switchLanguage('zh')\">中文</button>\n    <input v-model=\"inputText\" placeholder=\"Enter text to translate\" />\n    <button @click=\"translateText\">Translate</button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      inputText: '',\n      translatedText: ''\n    };\n  },\n  methods: {\n    async switchLanguage(lang) {\n      this.$i18n.locale = lang;\n    },\n    async translateText() {\n      try {\n        const response = await axios.post('https://libretranslate.de/translate', {\n          q: this.inputText,\n          source: 'auto',\n          target: this.$i18n.locale,\n          format: 'text'\n        });\n        this.translatedText = response.data.translatedText;\n      } catch (error) {\n        console.error('Translation error:', error);\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;uBAAbC,mBAAA,CAMM,OANNC,UAMM,GALJC,mBAAA,CAA2B,WAAAC,gBAAA,CAArBC,KAAA,CAAAC,cAAc,kBACpBH,mBAAA,CAAsD;IAA7CI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc;KAAQ,SAAO,GAC7CR,mBAAA,CAAiD;IAAxCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc;KAAQ,IAAE,G,gBACxCR,mBAAA,CAAmE;IALvE,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKoBJ,KAAA,CAAAO,SAAS,GAAAH,MAAA;IAAEI,WAAW,EAAC;iDAAvBR,KAAA,CAAAO,SAAS,E,GACzBT,mBAAA,CAAiD;IAAxCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEJ,QAAA,CAAAK,aAAA,IAAAL,QAAA,CAAAK,aAAA,IAAAD,IAAA,CAAa;KAAE,WAAS,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}