{"ast":null,"code":"// translateService.js\nimport LibreTranslate from 'libretranslate';\n\n// 确保你已经安装了 libretranslate 库，并且正确导入了它\n// npm install libretranslate\n\n// 初始化 LibreTranslate 实例\nconst libreTranslate = new LibreTranslate({\n  apiKey: 'your-api-key' // 如果你需要 API 密钥\n});\n\n// 定义一个翻译函数\nexport async function translateText(text, sourceLang, targetLang) {\n  try {\n    const translation = await libreTranslate.translate(text, sourceLang, targetLang);\n    return translation;\n  } catch (error) {\n    console.error('Translation error:', error);\n    throw error;\n  }\n}","map":{"version":3,"names":["LibreTranslate","libreTranslate","apiKey","translateText","text","sourceLang","targetLang","translation","translate","error","console"],"sources":["D:/HuaweiMoveData/Users/13565650660/Desktop/WebSite/display_web/src/translateService.js"],"sourcesContent":["// translateService.js\r\nimport LibreTranslate from 'libretranslate';\r\n\r\n// 确保你已经安装了 libretranslate 库，并且正确导入了它\r\n// npm install libretranslate\r\n\r\n// 初始化 LibreTranslate 实例\r\nconst libreTranslate = new LibreTranslate({\r\n  apiKey: 'your-api-key' // 如果你需要 API 密钥\r\n});\r\n\r\n// 定义一个翻译函数\r\nexport async function translateText(text, sourceLang, targetLang) {\r\n  try {\r\n    const translation = await libreTranslate.translate(text, sourceLang, targetLang);\r\n    return translation;\r\n  } catch (error) {\r\n    console.error('Translation error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n"],"mappings":"AAAA;AACA,OAAOA,cAAc,MAAM,gBAAgB;;AAE3C;AACA;;AAEA;AACA,MAAMC,cAAc,GAAG,IAAID,cAAc,CAAC;EACxCE,MAAM,EAAE,cAAc,CAAC;AACzB,CAAC,CAAC;;AAEF;AACA,OAAO,eAAeC,aAAaA,CAACC,IAAI,EAAEC,UAAU,EAAEC,UAAU,EAAE;EAChE,IAAI;IACF,MAAMC,WAAW,GAAG,MAAMN,cAAc,CAACO,SAAS,CAACJ,IAAI,EAAEC,UAAU,EAAEC,UAAU,CAAC;IAChF,OAAOC,WAAW;EACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}