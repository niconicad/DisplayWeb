{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.translate = void 0;\nconst translate = async ({\n  query,\n  source,\n  target,\n  format,\n  apiurl,\n  apiKey\n}) => {\n  if (!apiurl && !apiKey) throw new TypeError(\"You need an API key to use the public LibreTranslate API!\");\n  if (!apiurl) apiurl = \"https://libretranslate.com\";\n  if (!source) source = \"auto\";\n  let availableLanguages = [];\n  availableLanguages.push(\"auto\");\n  const res1 = await fetch(`${apiurl}/languages`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const languages = await res1.json();\n  languages.forEach(language => {\n    availableLanguages.push(language.code);\n  });\n  if (!availableLanguages.includes(source)) throw new TypeError(\"This language was not found/does not exist.\");\n  if (!availableLanguages.includes(target)) throw new TypeError(\"This language was not found/does not exist.\");\n  const res2 = await fetch(`${apiurl}/translate`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      q: query,\n      source: source,\n      target: target,\n      format: format || \"text\",\n      apiKey: apiKey || \"\"\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  try {\n    let t = await res2.json();\n    return t.translatedText;\n  } catch (err) {\n    throw err;\n  }\n};\nexports.translate = translate;","map":{"version":3,"names":["translate","query","source","target","format","apiurl","apiKey","TypeError","availableLanguages","push","res1","fetch","method","headers","languages","json","forEach","language","code","includes","res2","body","JSON","stringify","q","t","translatedText","err","exports"],"sources":["../src/translate.ts"],"sourcesContent":[null],"mappings":";;;;;;;AASO,MAAMA,SAAS,GAAG,MAAAA,CAAM;EAAEC,KAAK;EAAEC,MAAM;EAAEC,MAAM;EAAEC,MAAM;EAAEC,MAAM;EAAEC;AAAM,CAAoB,KAAI;EAClG,IAAI,CAACD,MAAM,IAAI,CAACC,MAAM,EAAE,MAAM,IAAIC,SAAS,CAAC,2DAA2D,CAAC;EAC3G,IAAI,CAACF,MAAM,EAAEA,MAAM,GAAG,4BAA4B;EAClD,IAAI,CAACH,MAAM,EAAEA,MAAM,GAAG,MAAM;EAE5B,IAAIM,kBAAkB,GAAa,EAAE;EACrCA,kBAAkB,CAACC,IAAI,CAAC,MAAM,CAAC;EAE/B,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,GAAGN,MAAM,YAAY,EAAE;IAC/CO,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAkB;GAC7C,CAAC;EAEF,MAAMC,SAAS,GAAG,MAAMJ,IAAI,CAACK,IAAI,EAAE;EACnCD,SAAS,CAACE,OAAO,CAACC,QAAQ,IAAG;IAC5BT,kBAAkB,CAACC,IAAI,CAACQ,QAAQ,CAACC,IAAI,CAAC;EACvC,CAAC,CAAC;EAGF,IAAI,CAACV,kBAAkB,CAACW,QAAQ,CAACjB,MAAM,CAAC,EAAE,MAAM,IAAIK,SAAS,CAAC,6CAA6C,CAAC;EAC5G,IAAI,CAACC,kBAAkB,CAACW,QAAQ,CAAChB,MAAM,CAAC,EAAE,MAAM,IAAII,SAAS,CAAC,6CAA6C,CAAC;EAE5G,MAAMa,IAAI,GAAG,MAAMT,KAAK,CAAC,GAAGN,MAAM,YAAY,EAAE;IAChDO,MAAM,EAAE,MAAM;IACdS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACpBC,CAAC,EAAEvB,KAAK;MACRC,MAAM,EAAEA,MAAM;MACdC,MAAM,EAAEA,MAAM;MACdC,MAAM,EAAEA,MAAM,IAAI,MAAM;MACxBE,MAAM,EAAEA,MAAM,IAAI;KAClB,CAAC;IACFO,OAAO,EAAE;MAAE,cAAc,EAAE;IAAkB;GAC7C,CAAC;EAEA,IAAI;IACL,IAAIY,CAAC,GAAG,MAAML,IAAI,CAACL,IAAI,EAAE;IACzB,OAAOU,CAAC,CAACC,cAAc;GACrB,CAAC,OAAOC,GAAG,EAAE;IACf,MAAMA,GAAG;;AAEV,CAAC;AAxCYC,OAAA,CAAA5B,SAAS,GAAAA,SAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}